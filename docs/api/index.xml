<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Api on</title><link>https://doks.netlify.app/docs/api/</link><description>Recent content in Api on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://doks.netlify.app/docs/api/index.xml" rel="self" type="application/rss+xml"/><item><title>Actions</title><link>https://doks.netlify.app/docs/api/form-actions/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://doks.netlify.app/docs/api/form-actions/</guid><description>field # Method to connect the form element to the key by providing native attributes like onChange, name, etc.
const { field } = useForm( { name: 'Rimuru' } ) &amp;lt;input {...field('name')} /&amp;gt; /// For validating when changing the value without triggering the submit to get the error validation &amp;lt;input {...field('name', { validate: true })} /&amp;gt; triggerChange # Method to make multiple changes in one render.
const { triggerChange } = useForm( { name: 'Rimuru' } ) triggerChange((form) =&amp;gt; { form.</description></item><item><title>Context Provider</title><link>https://doks.netlify.app/docs/api/form-provider/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://doks.netlify.app/docs/api/form-provider/</guid><description>FormProvider # Context provider for more complex forms. With nested components we can use other hooks to acces the form. We can use useFormField for accessing the especific field.
import React from 'react'; import { FormProvider, useForm } from '@resourge/react-form' export function CustomElement() { // field is the same as doing field('name') const { field, formContext } = useFormField('name') return ( &amp;lt;&amp;gt; &amp;lt;span&amp;gt; { formContext.isValid ? &amp;quot;Valid&amp;quot; : &amp;quot;Invalid&amp;quot; } CustomElement &amp;lt;/span&amp;gt; &amp;lt;input {.</description></item><item><title>Hooks</title><link>https://doks.netlify.app/docs/api/hooks/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://doks.netlify.app/docs/api/hooks/</guid><description>useForm # This hook is the main hook for creating the form:
import React, { useState } from 'react'; import { useForm } from '@resourge/react-form'; export default function LoginForm() { const { isValid, field, handleSubmit } = useForm( { username: '', password: '' } ) useFormField # ðŸ’¡ This hook will be only works when Form Provider is available When using form provider we can use useFormField for accesing the field when nested in component.</description></item></channel></rss>